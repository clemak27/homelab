---
version: '3.8'

services:
  recipes:
    image: ${RECIPES_SERVICE_IMAGE:?}:${RECIPES_SERVICE_VERSION:?}
    container_name: ${RECIPES_SERVICE_NAME:?}
    ports:
      - "${RECIPES_SERVICE_PORT:?}:${RECIPES_INTERNAL_PORT:?}"
    volumes:
      - "${DOCKER_DATA:?}/${RECIPES_SERVICE_NAME:?}/upload:/var/www/html/storage/upload"
    security_opt:
      - "label:disable"
    networks:
      - private
      - internal
    environment:
      SECRET_KEY: "${RECIPES_SECRET_KEY:?}"
      DB_ENGINE: "django.db.backends.postgresql"
      POSTGRES_HOST: "recipes_db"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "${RECIPES_DB_USER:?}"
      POSTGRES_PASSWORD: "${RECIPES_DB_PASSWORD:?}"
      POSTGRES_DB: "${RECIPES_DB_NAME:?}"
    labels:
      traefik.enable: true
      traefik.http.routers.recipes-router.entrypoints: https
      traefik.http.routers.recipes-router.rule: Host(`${RECIPES_SERVICE_NAME:?}.${DOMAIN:?}`)
      traefik.http.routers.recipes-router.tls: true
      traefik.http.routers.recipes-router.tls.certresolver: letsEncrypt
      traefik.http.routers.recipes-router.service: ${RECIPES_SERVICE_NAME:?}-service
      traefik.http.services.recipes-service.loadbalancer.server.port: ${RECIPES_INTERNAL_PORT:?}
    depends_on:
      - recipes_db
  recipes_db:
    image: ${RECIPES_DB_SERVICE_IMAGE:?}:${RECIPES_DB_SERVICE_VERSION:?}
    container_name: ${RECIPES_DB_SERVICE_NAME:?}
    volumes:
      - "${DOCKER_DATA:?}/${RECIPES_DB_SERVICE_NAME:?}:/var/lib/postgresql/data"
    security_opt:
      - "label:disable"
    networks:
      - internal
    environment:
      POSTGRES_DB: "${RECIPES_DB_NAME:?}"
      POSTGRES_USER: "${RECIPES_DB_USER:?}"
      POSTGRES_PASSWORD: "${RECIPES_DB_PASSWORD:?}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${RECIPES_DB_USER:?}", "-d", "${RECIPES_DB_NAME:?}"]
      interval: 30s
      start_period: 30s
    restart: unless-stopped
