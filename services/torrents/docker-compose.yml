---
version: '3.8'

services:
  transmission:
    image: ${TRANSMISSION_SERVICE_IMAGE:?}:${TRANSMISSION_SERVICE_VERSION:?}
    container_name: ${TRANSMISSION_SERVICE_NAME:?}
    ports:
      - "${TRANSMISSION_SERVICE_PORT:?}:${TRANSMISSION_SERVICE_PORT:?}"
      - "49153:49153"
      - "49153:49153/udp"
    environment:
      PUID: "1001"
      PGID: "1001"
      TZ: "Europe/vienna"
    volumes:
      - "${DOCKER_DATA:?}/${TRANSMISSION_SERVICE_NAME:?}:/config"
      - "${DOCKER_DATA:?}/torrents:/downloads"
    security_opt:
      - "label:disable"
    networks:
      - private
    labels:
      traefik.enable: true
      traefik.http.routers.transmission-router.entrypoints: https
      traefik.http.routers.transmission-router.rule: Host(`${TRANSMISSION_SERVICE_NAME:?}.${DOMAIN:?}`)
      traefik.http.routers.transmission-router.tls: true
      traefik.http.routers.transmission-router.tls.certresolver: letsEncrypt
      traefik.http.routers.transmission-router.service: ${TRANSMISSION_SERVICE_NAME:?}-service
      traefik.http.services.transmission-service.loadbalancer.server.port: ${TRANSMISSION_SERVICE_PORT:?}
    restart: unless-stopped

  jackett:
    image: ${JACKETT_SERVICE_IMAGE:?}:${JACKETT_SERVICE_VERSION:?}
    container_name: ${JACKETT_SERVICE_NAME:?}
    ports:
      - "${JACKETT_SERVICE_PORT:?}:${JACKETT_SERVICE_PORT:?}"
    environment:
      PUID: "1001"
      PGID: "1001"
      TZ: "Europe/vienna"
    volumes:
      - "${DOCKER_DATA:?}/${JACKETT_SERVICE_NAME:?}:/config"
      - "${DOCKER_DATA:?}/torrents/completed:/downloads"
    security_opt:
      - "label:disable"
    networks:
      - private
    labels:
      traefik.enable: true
      traefik.http.routers.jackett-router.entrypoints: https
      traefik.http.routers.jackett-router.rule: Host(`${JACKETT_SERVICE_NAME:?}.${DOMAIN:?}`)
      traefik.http.routers.jackett-router.tls: true
      traefik.http.routers.jackett-router.tls.certresolver: letsEncrypt
      traefik.http.routers.jackett-router.service: ${JACKETT_SERVICE_NAME:?}-service
      traefik.http.services.jackett-service.loadbalancer.server.port: ${JACKETT_SERVICE_PORT:?}
    restart: unless-stopped

  sonarr:
    image: ${SONARR_SERVICE_IMAGE:?}:${SONARR_SERVICE_VERSION:?}
    container_name: ${SONARR_SERVICE_NAME:?}
    ports:
      - "${SONARR_SERVICE_PORT:?}:${SONARR_SERVICE_PORT:?}"
    environment:
      PUID: "1001"
      PGID: "1001"
      TZ: "Europe/vienna"
    volumes:
      - "${DOCKER_DATA:?}/${SONARR_SERVICE_NAME:?}:/config"
      - "${DOCKER_DATA:?}/torrents:/downloads"
      - "${MEDIA_DATA:?}/series:/downloads/series"
    security_opt:
      - "label:disable"
    networks:
      - private
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr-router.entrypoints: https
      traefik.http.routers.sonarr-router.rule: Host(`${SONARR_SERVICE_NAME:?}.${DOMAIN:?}`)
      traefik.http.routers.sonarr-router.tls: true
      traefik.http.routers.sonarr-router.tls.certresolver: letsEncrypt
      traefik.http.routers.sonarr-router.service: ${SONARR_SERVICE_NAME:?}-service
      traefik.http.services.sonarr-service.loadbalancer.server.port: ${SONARR_SERVICE_PORT:?}
    restart: unless-stopped

  radarr:
    image: ${RADARR_SERVICE_IMAGE:?}:${RADARR_SERVICE_VERSION:?}
    container_name: ${RADARR_SERVICE_NAME:?}
    ports:
      - "${RADARR_SERVICE_PORT:?}:${RADARR_SERVICE_PORT:?}"
    environment:
      PUID: "1001"
      PGID: "1001"
      TZ: "Europe/vienna"
    volumes:
      - "${DOCKER_DATA:?}/${RADARR_SERVICE_NAME:?}:/config"
      - "${DOCKER_DATA:?}/torrents:/downloads"
      - "${MEDIA_DATA:?}/movies:/downloads/movies"
    security_opt:
      - "label:disable"
    networks:
      - private
    labels:
      traefik.enable: true
      traefik.http.routers.radarr-router.entrypoints: https
      traefik.http.routers.radarr-router.rule: Host(`${RADARR_SERVICE_NAME:?}.${DOMAIN:?}`)
      traefik.http.routers.radarr-router.tls: true
      traefik.http.routers.radarr-router.tls.certresolver: letsEncrypt
      traefik.http.routers.radarr-router.service: ${RADARR_SERVICE_NAME:?}-service
      traefik.http.services.radarr-service.loadbalancer.server.port: ${RADARR_SERVICE_PORT:?}
    restart: unless-stopped
