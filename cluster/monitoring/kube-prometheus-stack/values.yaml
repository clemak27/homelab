---
fullnameOverride: "kps"
namespaceOverride: "monitoring"

crds:
  enabled: true

defaultRules:
  create: true
  rules:
    etcd: false
    kubeControllerManager: false
    kubeProxy: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubelet: false
    kubernetesSystem: false

alertmanager:
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts: [alertmanager.wallstreet30.cc]
    paths: [/]
    pathType: Prefix
    tls:
      - hosts: [alertmanager.wallstreet30.cc]
        secretName: alertmanager-tls
  alertmanagerSpec:
    alertmanagerConfigSelector:
      matchLabels:
        alertmanager: config
    secrets:
      - telegram-bot

grafana:
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: browser
  defaultDashboardsEditable: false

  admin:
    existingSecret: "grafana-admin"
    userKey: user
    passwordKey: password

  rbac:
    pspEnabled: false

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts: [grafana.wallstreet30.cc]
    path: /
    pathType: Prefix
    tls:
      - hosts: [grafana.wallstreet30.cc]
        secretName: grafana-tls

  persistence:
    enabled: true
    type: pvc
    existingClaim: grafana-data

  serviceAccount:
    create: true
    autoMount: true

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: ALL
      annotations:
        k8s-sidecar-target-directory: "kps"
      multicluster:
        global:
          enabled: false
        etcd:
          enabled: false
      provider:
        allowUiUpdates: false
        foldersFromFilesStructure: true

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

prometheus:
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      ingress.kubernetes.io/ssl-redirect: "true"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: letsencrypt-production
    hosts: [prometheus.wallstreet30.cc]
    paths: [/]
    pathType: Prefix
    tls:
      - hosts: [prometheus.wallstreet30.cc]
        secretName: prometheus-tls
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    retention: 31d
    storageSpec:
      # prometheus-kps-prometheus-db-prometheus-kps-prometheus-0
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 50Gi
          selector:
            matchLabels:
              prometheus-data: "true"
